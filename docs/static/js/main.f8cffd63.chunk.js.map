{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","handleLogin","preventDefault","onSubmit","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","handleRegister","isFormValid","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","trim","length","validator","isEmail","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f8cffd63.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBAIiNDrhEwumEt6LDIOsUxRhk_EPDlZw4\",\r\n  authDomain: \"reactjs-journal.firebaseapp.com\",\r\n  projectId: \"reactjs-journal\",\r\n  storageBucket: \"reactjs-journal.appspot.com\",\r\n  messagingSenderId: \"506320836986\",\r\n  appId: \"1:506320836986:web:b1c9da7750e8476156dec3\"\r\n};\r\n\r\nfirebase.initializeApp( firebaseConfig );\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n    });\r\n\r\n    return notes;\r\n}\r\n\r\n","export const types = {\r\n    \r\n    login: '[auth] login',\r\n    logout: '[logout] logout',\r\n\r\n    uiSetError: '[UI] set error',\r\n    uiRemoveError: '[UI] remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note saved',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = `https://api.cloudinary.com/v1_1/jgnavas/upload`;\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, { \r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}\r\n","\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n//tareas asincronas se pone un callback\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote) );\r\n\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes =  (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes( uid);\r\n        dispatch( setNotes( notes ) );\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update( noteToFirestore );\r\n        dispatch( refreshNote(note.id, noteToFirestore) );\r\n\r\n        Swal.fire('Saved', note.title, 'success');\r\n\r\n    }\r\n}\r\n//funcion sincrona\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\n//funcion asincrona\r\nexport const startUploading = (file) => {\r\n    return async ( dispatch,getState )=>{\r\n        const activeNote = getState().notes.active;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch( startSaveNote( activeNote ) );\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n// tarea asincrona\r\nexport const startDeleting = (id)=> {\r\n    return async (dispatch, getState) => {\r\n        \r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n    }\r\n};\r\n// tarea sincrona\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) );\r\n    }\r\n\r\n    const handleUploadImage = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch( startUploading(file) );\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>8 de octubre del 2021</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                name=\"file\"\r\n                type=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn\" onClick={ handleUploadImage } >Picture</button>\r\n                <button className=\"btn\" onClick={ handleSave }>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const {active: note} = useSelector(state => state.notes);\r\n    const dispatch = useDispatch();\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const {body, title, id} = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => { \r\n        if(note.id!==activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote(formValues.id, {...formValues}) );\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(id) );\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Some awesome to insert\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n\r\n                />\r\n                <textarea\r\n                    placeholder=\"What happened today!\"\r\n                    name=\"body\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n                {   \r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img src={note.url} alt=\"Fondo chevere\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button className=\"btn btn-danger\" onClick={handleDelete} >Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = (err) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return{\r\n        type: types.uiStartLoading\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return{\r\n        type: types.uiFinishLoading\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch( startLoading() );\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then(( { user } ) => {\r\n                dispatch( login(user.uid, user.displayName ));\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n                dispatch( finishLoading() );\r\n            });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch( login( user.uid, user.displayName ) );\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.logout\r\n    }\r\n}","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    \r\n    const noteDate=moment(date);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote(id, {date, title, body, url}) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" onClick={ handleEntryClick }  >\r\n            {\r\n                url && \r\n                <div \r\n                    className=\"journal__entry-picture\" \r\n                    style={{ \r\n                            backgroundSize: 'cover',\r\n                            backgroundImage: `url(${ url })` \r\n                    }}>\r\n                </div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={note.id} \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n                <button className=\"btn\" onClick={ handleLogout }>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div className=\"journal__new-entry\" onClick={ handleAddNew }>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    //para traer algo del store se debe usar useSelector\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n            <main>\r\n\r\n                {\r\n                    (active)\r\n                        ? ( <NoteScreen /> )\r\n                        : (<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// import validator from 'validator';\r\n\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n// import { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'test@email.com',\r\n        password: 'Multisucredota95.'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // if(isFormValid()){\r\n        //     dispatch( startLoginEmailPassword(email,password) );\r\n        // }\r\n        dispatch( startLoginEmailPassword(email,password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    // const isFormValid = () => {\r\n    //     if( !validator.isEmail(email) ){\r\n    //         dispatch( setError('Email no valid') );\r\n    //         return false;\r\n    //     }else if( password.length < 5 ){\r\n    //         dispatch( setError('Password should be at least 6 characters') );\r\n    //         return false;\r\n    //     }\r\n    //     dispatch( removeError() );\r\n    //     return true;\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\"> Login </h3>\r\n\r\n            <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\" >\r\n\r\n                {/* { \r\n                    msgError && \r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                } */}\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    onSubmit={ handleLogin }\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div className=\"google-btn\" onClick={ handleGoogleLogin }>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Gabo',\r\n        email: 'test@email.com',\r\n        password: 'Multisucredota95.',\r\n        password2: 'Multisucredota95.'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if( isFormValid() ){\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if(name.trim().length === 0){\r\n            dispatch( setError('Name is required') );  \r\n            return false;\r\n        }else if( !validator.isEmail( email ) ){\r\n            dispatch( setError('Email not valid') );  \r\n            return false;\r\n        }else if( password !== password2 || password.length < 5 ){\r\n            dispatch( setError('Password should be at least 6 characters') ); \r\n            return false;\r\n        }\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\"> Register </h3>\r\n\r\n            <form onSubmit={ handleRegister } className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                { \r\n                    msgError && \r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={ handleInputChange }\r\n                    value={ name }\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={ handleInputChange }\r\n                    value={ email }\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                    value={ password }\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    onChange={ handleInputChange }\r\n                    value={ password2 }\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    onSubmit={ handleRegister }\r\n                    // disabled={true}\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already register?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\"  component={ LoginScreen } />\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport  PropTypes  from 'prop-types';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => ( \r\n                (isAuthenticated)\r\n                    ? (<Component { ...props } />)\r\n                    : (<Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport  PropTypes  from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => ( \r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component { ...props } />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n            if( user?.uid ){\r\n                \r\n                dispatch( login(user.uid, user.displayName) );\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            }else{\r\n                setIsLoggedIn( false );\r\n            }\r\n            setChecking(false);\r\n\r\n        });\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if( checking ){\r\n        return (\r\n            <h1>Wait.....</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute path=\"/auth\" component={ AuthRouter } isAuthenticated={isLoggedIn}  />\r\n                    <PrivateRoute exact path=\"/\" isAuthenticated={isLoggedIn} component={ JournalScreen } />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        notes: [],\r\n        active: null, \r\n        active: {\r\n            id: 'ssdsadsddfdsf',\r\n            title: '',\r\n            body: '',\r\n            imgUrl: '',\r\n            date: 154151515\r\n        }\r\n    }\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.notesUpdated: \r\n            return{\r\n                ...state,\r\n                notes: state.notes.map( \r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            };\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n        \r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: [],\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading: \r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state= {} , action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n            \r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\nimport './styles/styles.scss';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JournalApp } from './JournalApp';\r\n\r\nReactDOM.render( <JournalApp /> , document.getElementById('root'));"],"sourceRoot":""}